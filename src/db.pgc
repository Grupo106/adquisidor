/* vim: set ft=c: */
#include <assert.h>
#include <string.h>
#include "db.h"

EXEC SQL BEGIN DECLARE SECTION;
    char _src[15],
         _dst[15];
    int _sport,
        _dport,
        _bytes,
        _protocol;
    const char *_insert_stmt =
    "INSERT INTO traffic (src, dst, sport, dport, bytes, protocol) \
     VALUES(?, ?, ?, ?, ?, ?);";
EXEC SQL END DECLARE SECTION;

EXEC SQL WHENEVER SQLERROR SQLPRINT;
EXEC SQL WHENEVER SQLWARNING SQLPRINT;


/**
* imprimir()
* ---------------------------------------------------------------------------
* Imprime paquete en la salida estandar
*/
void imprimir(t_paquete *paquete) {
    // imprimir paquete
    char src[15], dst[15];
    strcpy(src, inet_ntoa(paquete->src));
    strcpy(dst, inet_ntoa(paquete->dst));
    printf("paquete src:%s, dst:%s, sport:%d, dport:%d, bytes:%d, \
protocol:%d\n",
           src,
           dst,
           paquete->sport,
           paquete->dport,
           paquete->bytes,
           paquete->protocol);
}

int bd_conectar() {
    //ECPGdebug(1, stderr);
    EXEC SQL CONNECT TO postgres@172.17.0.2 USER postgres/root;
    return sqlca.sqlcode;
}

void bd_desconectar() {
    EXEC SQL DISCONNECT ALL;
}

void bd_insertar(t_paquete *paquete) {
    assert(paquete != NULL);
    /* Preparo sentencia insert */
    EXEC SQL PREPARE _insert FROM :_insert_stmt;
    /* Preparo parametros */
    strcpy(_src, inet_ntoa(paquete->src));
    strcpy(_dst, inet_ntoa(paquete->dst));
    _sport = paquete->sport;
    _dport = paquete->dport;
    _bytes = paquete->bytes;
    _protocol = paquete->protocol;
    /* Ejecuto sentencia */
    EXEC SQL EXECUTE _insert
         USING :_src, :_dst, :_sport, :_dport, :_bytes, :_protocol;
    /* Libero recursos */
    EXEC SQL DEALLOCATE PREPARE _insert;
    imprimir(paquete);
}

void bd_commit() {
    EXEC SQL COMMIT;
}
